uniform sampler2D tex0;
float inner = 0.0;
float outer = 0.7;
float amount = 1.0;
uniform vec3 color;

uniform float run;


uint wang_hash(uint seed)
{
    seed = (seed ^ 61) ^ (seed >> 16);
    seed *= 9;
    seed = seed ^ (seed >> 4);
    seed *= 0x27d4eb2d;
    seed = seed ^ (seed >> 15);
    return seed;
}

float rand(uint value)
{
	return float(wang_hash(value)) * (1.0 / 4294967296.0);
}

float blur = 0.05;

bool vr = false;
void main(void)
{
	inner = mix(0.17, 0.2, run);
	outer = mix(0.72, 2.5, run);
	
	vec2 uv =  gl_TexCoord[0].st;
	vec4 texel = texture2D(tex0, uv);
	
	//gl_FragData[0] = vec4(run,1,1,1); return;
	//gl_FragData[0] = texel; return;

	float distance = 0.0;	
	if (vr)
	{
		uv.x = (2.0 * uv.x); float side = sign(uv.x - 1.0);	
		distance = length(gl_TexCoord[0].st - vec2(0.25 + 0.25 * (1.0 + side), 0.5)) * 2.0;
	}
	else
	{
		float r = 16.0 / 10.0;
		uv.x *= r; 
		distance = length(uv - vec2(0.5 * r, 0.25)) * 2.0;
	}
	
	float vig = smoothstep(outer, inner, distance);
	
	
	
  vec4 sample;
  vec4 accum = 0.0;
  float sum = 0.0;
    
  vec2 offset = vec2(0,0);
  
  for (uint i = 0; i < 500; i++)
  {
    offset = (-1.0 + 2.0 * vec2(rand(81*i+0), rand(81*i+13))) * pow(1.0 - vig, 2.0) * blur;

    vec2 sc = gl_TexCoord[0].st + offset;
    if (sc.x < 0 || sc.x > 1 || sc.y < 0 || sc.y > 1)
    {
       continue;
    }
          
    sample = texture2D(tex0, /*mod(gl_TexCoord[0].st + offset, 1.0)*/sc);
    accum += sample;
    sum++;  
  }
  accum /= sum;


  gl_FragData[0] = vec4(
						mix(mix(texel.rgb, accum.rgb, amount), color, (1.0 - vig) * amount),
						
						texel.a);
  

//gl_FragData[0] = vec4(mix(texel.rgb, color, (1.0 - vig) * amount), texel.a);
}
